{
	"info": {
		"_postman_id": "d75c1c7f-9310-423b-9391-59c5fe3c3f74",
		"name": "EXAM month-3",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27856985"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"phone\": \"+998 88 236 88 83\",\n    \"password\" : \"navruzbek\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "refresh",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"phone\": \"+998 93 938 64 62\",\n    \"password\" : \"abrorbek\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "sign out",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6InN1cGVyX2FkbWluIiwiaWF0IjoxNjkyMzIwNTkzLCJleHAiOjE2OTIzMjE0OTN9.g7dFzuux7xcIH3cXXb1YucffdBJP7bGfcpd-VjtWM-s",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/info",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"info"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "Category",
			"item": [
				{
					"name": "Category add",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"O`quv qurollari\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/category/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "Category edit",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Ruscha Kitoblar\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/category/edit/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category",
								"edit",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Category delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/category/delete/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category",
								"delete",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Categories retrieve",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/category/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Categories retrieve Tree",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/category/all/tree",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category",
								"all",
								"tree"
							]
						}
					},
					"response": []
				},
				{
					"name": "SubCategory add",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Ofis uchun o`quv qurollari\",\r\n    \"parentId\" : 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/category/subcategory/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category",
								"subcategory",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "SubCategory edit",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Sarguzasht kitoblar updated\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/category/subcategory/edit/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category",
								"subcategory",
								"edit",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "SubCategory delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Sarguzasht kitoblar updated\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/category/subcategory/delete/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category",
								"subcategory",
								"delete",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Double SubCategory add",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Daftarlar\",\r\n    \"parentId\" : 4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/category/double-subcategory/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category",
								"double-subcategory",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "Double SubCategory retrieve",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/category/double-subcategory/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category",
								"double-subcategory",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Double SubCategory retrieve Tree",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/category/double-subcategory/all/tree",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category",
								"double-subcategory",
								"all",
								"tree"
							]
						}
					},
					"response": []
				},
				{
					"name": "Double SubCategory edit",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Robinzo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/category/double-subcategory/edit/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category",
								"double-subcategory",
								"edit",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Double SubCategory delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Robinzoning sarguzashtlari update\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/category/double-subcategory/delete/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category",
								"double-subcategory",
								"delete",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "SubCategories retrieve",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/category/subcategory/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category",
								"subcategory",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "SubCategories retrieve Tree",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/category/subcategory/all/tree",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"category",
								"subcategory",
								"all",
								"tree"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "retrieve all users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "retrieve single user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/user/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"user",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Abrorbek Abdulxamidov\",\r\n    \"password\" : \"abror\",\r\n    \"phone\" :  \"+998 88 236 88 83\",\r\n    \"email\" : \"abror@gmail.com\",\r\n    \"role\" : \"super_admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/user/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"user",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit user",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\" : \"navruzbek\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/user/edit/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"user",
								"edit",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\" : \"navruzbek\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/user/delete/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"user",
								"delete",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "retrieve all products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "retrieve products by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "retrieve products by category id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/category/5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"category",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add product",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "images",
									"type": "file",
									"src": [
										"/C:/Users/abdul/Downloads/notebook2.jpg",
										"/C:/Users/abdul/Downloads/notebook.jpg"
									]
								},
								{
									"key": "title",
									"value": "Daftarlar",
									"type": "text"
								},
								{
									"key": "price",
									"value": "5000",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Daftarlar description",
									"type": "text"
								},
								{
									"key": "year",
									"value": "2023",
									"type": "text"
								},
								{
									"key": "categoryId",
									"value": "9",
									"type": "text"
								},
								{
									"key": "count",
									"value": "421",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/products/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit product",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\" : \"Maktab daftarlari\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/edit/10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"edit",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete product",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/delete/10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"delete",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get products with limit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/?size=4&page=3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							],
							"query": [
								{
									"key": "size",
									"value": "4"
								},
								{
									"key": "page",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get products with search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/search/?title=daf",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"search",
								""
							],
							"query": [
								{
									"key": "title",
									"value": "daf"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "retrieve all orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/orders/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "add order",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Miwicm9sZSI6ImFkbWluIiwiaWF0IjoxNjkyNjcwOTM4LCJleHAiOjE2OTI2NzE4Mzh9.fGbAJZ4FF20U7F3uqdX5XuCT6sw3welSHvFX9XIRp1s",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"productId\" : 1,\r\n    \"phone\" : \"+998 90 000 00 00\",\r\n    \"address\" : \"Tashkent Tashkent Yashnobod\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/orders/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "retrieve orders by user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Miwicm9sZSI6ImFkbWluIiwiaWF0IjoxNjkyNjcwOTM4LCJleHAiOjE2OTI2NzE4Mzh9.fGbAJZ4FF20U7F3uqdX5XuCT6sw3welSHvFX9XIRp1s",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/orders/user-orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders",
								"user-orders"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "http://localhost:5005/api/v1"
		}
	]
}